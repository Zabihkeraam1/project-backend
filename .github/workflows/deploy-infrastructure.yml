name: Deploy Infrastructure
on:
  push:
    branches: [ "master" ]
    paths:
    - 'terraform/**'
    - '.github/workflows/deploy-infrastructure.yml'

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: "eu-north-1"

    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform -chdir=terraform init -input=false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Plan
        run: |
          terraform -chdir=terraform plan \
            -input=false \
            -out=tfplan
        env:
          TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Apply
        run: |
          terraform -chdir=terraform apply \
            -input=false \
            tfplan
        env:
          TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_website_files_path: ${{ github.workspace }}/website
          
      - name: Store Outputs in SSM
        run: |
          cd ./terraform
          # Get raw outputs without quotes
          APPRUNNER_URL=$(terraform output apprunner_service_url | grep -oE '".*"' | tr -d '"' | head -1)
          aws ssm put-parameter --name "/app/apprunner_url" --value "$APPRUNNER_URL" --type String --overwrite
          echo "Stored AppRunner URL: $APPRUNNER_URL"